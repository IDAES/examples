[build-system]
requires = [
    "setuptools>=61",
    "wheel",
    "setuptools_scm[toml]"
]
build-backend = "setuptools.build_meta"

[project]
name = "idaes-examples"
description = "IDAES Process Systems Engineering Examples"
readme = "README.md"
version = "2.5.dev0"
license = {text="BSD"}
requires-python = ">=3.8"
authors = [
    {name="The IDAES Project"},
    {name="Dan Gunter", email="dkgunter@lbl.gov"}
]
classifiers = [
        "Development Status :: 3 - Alpha",
        "Intended Audience :: End Users/Desktop",
        "Intended Audience :: Science/Research",
        "License :: OSI Approved :: BSD License",
        "Natural Language :: English",
        "Operating System :: MacOS",
        "Operating System :: Microsoft :: Windows",
        "Operating System :: Unix",
        "Programming Language :: Python",
        "Programming Language :: Python :: 3",
        "Programming Language :: Python :: 3.8",
        "Programming Language :: Python :: 3.9",
        "Programming Language :: Python :: 3.10",
        "Programming Language :: Python :: 3.11",
        "Programming Language :: Python :: Implementation :: CPython",
        "Topic :: Scientific/Engineering :: Mathematics",
        "Topic :: Scientific/Engineering :: Chemistry",
        "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    # Don't version setuptools, various bits complain
    "setuptools",
    # Pyomo
    "pyomo>=6.5.0",
    "jupyter",
    "importlib_resources ; python_version < '3.9'",  # importlib.resources.files()
]
keywords = ["IDAES", "energy systems", "chemical engineering", "process modeling"]

[project.optional-dependencies]
omlt = [
    # For Keras/OMLT
    "omlt",
    'tensorflow<2.16.1 ; python_version < "3.12"',
]
idaes = [
    "idaes-pse",  # installing IDAES (from release) is opt-in
]
testing = [
    # parallel pytest
    "pytest-xdist ~= 3.0.2",
    # pytest reporting
    "pytest-reportlog ~= 0.1.2",
    "nbclient",
    "nbmake == 1.5.*",
]
# dependencies for building documentation
docs = [
    "jupyter-book ~= 0.15.0",
    # "jupyter-cache ~= 0.4.3",
    "jupyter-cache",
    # the older version of nbmake goes with the older
    # version of nbclient, which is required by jupyter-cache
    # "nbclient ~= 0.5.13",
    "nbclient",
    "nbformat",
    # markdown in Sphinx
    # we don't specify these as we assume jupyter-book will install compatible versions
    # "myst-nb ~= 0.17.1",
    # "myst-parser ~= 0.18.0",
]
# For developers
dev = [
    "idaes-examples[testing,docs]",
    # For jupyter notebook testing
    "black[jupyter] ~= 22.8.0",
    # For adding copyright headers (see addheader.yml and the readme)
    "addheader >= 0.3.0",
    "blessed ~= 1.20.0",
]
# For creating a package
packaging = [
    "build",
    "twine"
]

[project.urls]
github = "https://github.com/idaes/examples"
issues = "https://github.com/idaes/examples/issues"

[project.scripts]
idaesx = "idaes_examples.build:main"

[tool.setuptools]
include-package-data = true
zip-safe = false

[tool.setuptools.packages]
find = {namespaces = false}

[tool.setuptools.package-data]
idaes_examples = [
    "*.template",
    "*.json",
    "*.yaml",
    "*.svg",
    "*.png",
    "*.jpg",
    "*.csv",
    "*.ipynb",
    "*.txt",
    "*.js",
    "*.css",
    "*.html",
    "*.json.gz",
    "*.dat",
    "*.h5",
    "*.pb",  # for Keras Surrogate folder
    "*.data-00000-of-00001",  # for Keras Surrogate folder
    "*.index",  # for Keras Surrogate folder
    "*.trc",
    "*.xlsx",  # idaes/dmf/tests/data_files - tabular import test files
    "*.yml",
    "*.yaml"
]
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--strict-markers"
markers = [
    "unit",
    "integration",
    "component", 
    "needs_solver"
]
testpaths = "idaes_examples"

[tool.typos.files]
extend-exclude = [
    "*.svg",
    "*.json",
    "*.css",
    "*.yml",
]

[tool.typos.default.extend-words]
# Ignore IDAES
IDAES = "IDAES"
# Ignore HDA, assumes it's on purpose and not a typo of "had"
HDA = "HDA" 
# Ignore Attemp - assume it is abbreviating attemperator
Attemp = "Attemp"
# Ignore equil, assumes it's on purpose and not a typo of "equal"
equil = "equil"
# Atomic elements
Nd = "Nd"
Ba = "Ba" # ba is also used in block names in RSOFC-SOEC example
# Numpy
arange = "arange"
[tool.typos.default]
extend-ignore-re = [
    # Jupyter notebooks: ignore hexadecimal values in "id" cell metadata field
    '"id": "[0-9a-f]+",',
    # ser is used as a variable name for pd.Series, so we exclude it when followed by a dot
    # as of 2024-04-25, the false positive are all due to warnings in the output of certain notebooks
    # which should be resolved regardless (see IDAES/examples#108)
    "ser[.].*",
]
